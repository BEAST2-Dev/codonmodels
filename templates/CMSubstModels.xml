<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel
       :beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util
       :beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel
       :beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions
       :beast.evolution.alignment:beast.evolution.datatype:codonmodels'>


    <mergewith point='codonSubstModelTemplates'>

        <!-- codon models -->

        <subtemplate id="CodonModel_M0" class="codonmodels.M0CodonModel" mainid="M0.s:$(n)"
                     suppressInputs="codonmodels.M0CodonModel.rates,
                     codonmodels.M0CodonModel.eigenSystem, codonmodels.M0CodonModel.data,
                     codonmodels.M0CodonModel.printRateMap, codonmodels.M0CodonModel.frequencies">
            <![CDATA[
        <plugin spec="codonmodels.M0CodonModel" id="M0.s:$(n)">
            <parameter id="M0.omega.s:$(n)" name="omega" value="1.0"/>
            <parameter id="M0.kappa.s:$(n)" name="kappa" value="2.0"/>
            <frequencies id="F3X4Freqs.s:$(n)" spec="codonmodels.CodonFrequencies">
                <data idref="$(n)"/>
            </frequencies>
        </plugin>

        <plugin id='OmegaScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@M0.omega.s:$(n)"/>
        <plugin id='KappaScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@M0.kappa.s:$(n)"/>

        <prior id='OmegaPrior.s:$(n)' x='@M0.omega.s:$(n)'>
            <distr spec="LogNormalDistributionModel" meanInRealSpace='false'>
                <parameter name='M' value="3.0" estimate='false'/>
                <parameter name='S' value="1.25" estimate='false'/>
            </distr>
		</prior>
        <prior id='KappaPrior.s:$(n)' x='@M0.kappa.s:$(n)'>
            <distr spec="LogNormalDistributionModel" meanInRealSpace='false'>
                <parameter name='M' value="-3.0" estimate='false'/>
                <parameter name='S' value="1.25" estimate='false'/>
            </distr>
		</prior>
]]>

            <connect srcID="M0omega.s:$(n)" targetID="state" inputName="stateNode" if="inlikelihood(M0.s:$(n))"/>
            <connect srcID="M0kappa.s:$(n)" targetID="state" inputName="stateNode" if="inlikelihood(M0.s:$(n))"/>

            <connect srcID="M0omega.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(M0.s:$(n))"/>
            <connect srcID="M0kappa.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(M0.s:$(n))"/>
        </subtemplate>

        <subtemplate id="CodonModel_M1" class="codonmodels.M0CodonModel" mainid="M0.s:$(n)"
                     suppressInputs="codonmodels.M0CodonModel.rates,
                     codonmodels.M0CodonModel.eigenSystem, codonmodels.M0CodonModel.data,
                     codonmodels.M0CodonModel.printRateMap, codonmodels.M0CodonModel.frequencies">
            <![CDATA[
        <plugin spec="codonmodels.M0CodonModel" id="M0.s:$(n)">
            <parameter id="M0.omega.s:$(n)" name="omega" value="1.0"/>
            <parameter id="M0.kappa.s:$(n)" name="kappa" value="2.0"/>
            <frequencies id="codonFreqs.s:$(n)" spec="codonmodels.CodonFrequencies" pi="F3X4">
                <data idref="$(n)"/>
            </frequencies>
        </plugin>

        <plugin id='OmegaScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@M0.omega.s:$(n)"/>
        <plugin id='KappaScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="1" parameter="@M0.kappa.s:$(n)"/>

        <prior id='OmegaPrior.s:$(n)' x='@M0.omega.s:$(n)'>
            <distr spec="LogNormalDistributionModel" meanInRealSpace='false'>
                <parameter name='M' value="3.0" estimate='false'/>
                <parameter name='S' value="1.25" estimate='false'/>
            </distr>
		</prior>
        <prior id='KappaPrior.s:$(n)' x='@M0.kappa.s:$(n)'>
            <distr spec="LogNormalDistributionModel" meanInRealSpace='false'>
                <parameter name='M' value="-3.0" estimate='false'/>
                <parameter name='S' value="1.25" estimate='false'/>
            </distr>
		</prior>
]]>

            <connect srcID="M0omega.s:$(n)" targetID="state" inputName="stateNode" if="inlikelihood(M0.s:$(n))"/>
            <connect srcID="M0kappa.s:$(n)" targetID="state" inputName="stateNode" if="inlikelihood(M0.s:$(n))"/>

            <connect srcID="M0omega.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(M0.s:$(n))"/>
            <connect srcID="M0kappa.s:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(M0.s:$(n))"/>
        </subtemplate>


        <!-- frequency models -->
        <subtemplate id='F3X4' class='codonmodels.CodonFrequencies' mainid='F3X4Freqs.s:$(n)'
                     suppressInputs="codonmodels.CodonFrequencies.estimate,
                     codonmodels.CodonFrequencies.frequencies">
            <![CDATA[
            <frequencies id='F3X4Freqs.s:$(n)' spec='codonmodels.CodonFrequencies' data='@$(n)' pi="F3X4"/>
]]>
        </subtemplate>

        <subtemplate id='F1X4' class='codonmodels.CodonFrequencies' mainid='F1X4Freqs.s:$(n)'
                     suppressInputs="codonmodels.CodonFrequencies.estimate,
                     codonmodels.CodonFrequencies.frequencies">
            <![CDATA[
            <frequencies id='F1X4Freqs.s:$(n)' spec='codonmodels.CodonFrequencies' data='@$(n)' pi="F1X4"/>
]]>
        </subtemplate>

        <subtemplate id='equal' class='codonmodels.CodonFrequencies' mainid='equalFreqs.s:$(n)'
                     suppressInputs="codonmodels.CodonFrequencies.estimate,
                     codonmodels.CodonFrequencies.frequencies">
            <![CDATA[
            <frequencies id='equalFreqs.s:$(n)' spec='codonmodels.CodonFrequencies' data='@$(n)' pi="equal"/>
]]>
        </subtemplate>

        <subtemplate id='F6n' class='codonmodels.CodonFrequencies' mainid='F6nFreqs.s:$(n)'
                     suppressInputs="codonmodels.CodonFrequencies.estimate,
                     codonmodels.CodonFrequencies.frequencies">
            <![CDATA[
            <frequencies id='F6nFreqs.s:$(n)' spec='codonmodels.CodonFrequencies' data='@$(n)' pi="F6n"/>
]]>
        </subtemplate>

    </mergewith>

</beast>

